document.addEventListener("DOMContentLoaded", function() {
    // --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥ ---
    const registerForm = document.getElementById("register-form");
    const loginBtn = document.getElementById("login-btn");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    function checkCurrentUser() {
        const currentUser = JSON.parse(localStorage.getItem("currentUser"));
        if (currentUser) {
            const card = document.querySelector(".register-card");
            if (card) {
                card.innerHTML = `
                    <h2>–ü—Ä–∏–≤–µ—Ç, ${currentUser.username}!</h2>
                    <p>–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É.</p>
                    <button id="logout-btn">–í—ã–π—Ç–∏</button>
                `;
                document.getElementById("logout-btn").addEventListener("click", function() {
                    localStorage.removeItem("currentUser");
                    location.reload();
                });
            }
        }
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    if (registerForm) {
        registerForm.addEventListener("submit", function(event) {
            event.preventDefault();
            const username = document.getElementById("username").value.trim();
            const email = document.getElementById("email").value.trim();
            const password = document.getElementById("password").value;

            if (username.length < 3) {
                alert('–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞');
                return;
            }
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å');
                return;
            }
            if (!password || password.length < 8 || password.length > 20 || !/[A-Za-z]/.test(password) || !/\d/.test(password)) {
                alert('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 8-20 —Å–∏–º–≤–æ–ª–æ–≤, –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã');
                return;
            }

            let registeredUsers = JSON.parse(localStorage.getItem("registeredUsers") || "[]");
            const existingUser = registeredUsers.find(u => u.username === username || u.email === email);
            if (existingUser) {
                if (existingUser.username === username) {
                    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
                } else {
                    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
                }
                return;
            }
            const newUser = { username, email, password, registrationDate: new Date().toISOString() };
            registeredUsers.push(newUser);
            localStorage.setItem("registeredUsers", JSON.stringify(registeredUsers));
            localStorage.setItem("currentUser", JSON.stringify({ username, email }));
            alert(`–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}.`);
            window.location.href = getPersonalPageHref();
        });
    }

    // –í—Ö–æ–¥
    if (loginBtn) {
        loginBtn.addEventListener("click", function(e) {
            e.preventDefault();
            const username = document.getElementById("username").value.trim();
            const email = document.getElementById("email").value.trim();
            const password = document.getElementById("password").value;
            if (!username || !email || !password) {
                alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –¥–ª—è –≤—Ö–æ–¥–∞");
                return;
            }
            const registeredUsers = JSON.parse(localStorage.getItem("registeredUsers") || "[]");
            const user = registeredUsers.find(u => u.username === username && u.email === email && u.password === password);
            if (user) {
                localStorage.setItem("currentUser", JSON.stringify({ username: user.username, email: user.email }));
                alert("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...");
                window.location.href = getPersonalPageHref();
            } else {
                alert("–û—à–∏–±–∫–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.");
            }
        });
    }

    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—É—Ç—å –¥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è index.html, –∏ –¥–ª—è src/index.html)
    function getPersonalPageHref() {
        // –ï—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ src/, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –≤ personal.html –±–µ–∑ src/
        if (window.location.pathname.includes('/src/')) {
            return 'personal.html';
        } else {
            return 'src/personal.html';
        }
    }

    checkCurrentUser();

/* document.addEventListener("DOMContentLoaded", function() {
    const resetForm = document.getElementById("reset-form");
    const codeSection = document.getElementById("code-section");
    const confirmReset = document.getElementById("confirm-reset");

    let resetCode = "";

    if (resetForm) {
        resetForm.addEventListener("submit", function(event) {
            event.preventDefault();
            const email = document.getElementById("reset-email").value.trim();
            const userData = JSON.parse(localStorage.getItem("user"));

            if (!userData || userData.email !== email) {
                alert("–û—à–∏–±–∫–∞: –≠—Ç–æ—Ç email –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!");
                return;
            }

            // üîπ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥
            resetCode = Math.random().toString(36).substring(2, 8).toUpperCase();
            alert(`–í–∞—à –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ${resetCode}`); // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É email
            codeSection.style.display = "block";
        });
    }

    if (confirmReset) {
        confirmReset.addEventListener("click", function() {
            const enteredCode = document.getElementById("reset-code").value.trim();
            const newPassword = document.getElementById("new-password").value.trim();

            if (enteredCode !== resetCode) {
                alert("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è!");
                return;
            }

            if (newPassword.length < 6) {
                alert("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤!");
                return;
            }

            let userData = JSON.parse(localStorage.getItem("user"));
            userData.password = newPassword;
            localStorage.setItem("user", JSON.stringify(userData));
            alert("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!");
            window.location.href = "/login.html";
        });
    }
});
 */

    // --- –û—Ç–∑—ã–≤—ã ---
    const reviewForm = document.querySelector(".review-form");
    const reviewList = document.querySelector(".review-list");

    if (reviewForm && reviewList) {
        reviewForm.addEventListener("submit", function(event) {
            event.preventDefault();
            const name = document.getElementById("name").value.trim();
            const comment = document.getElementById("comment").value.trim();
            if (!name || !comment) {
                alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
                return;
            }
            const newReview = document.createElement("div");
            newReview.classList.add("review");
            newReview.innerHTML = `
                <h3>${name}</h3>
                <p>${comment}</p>
                <div class="review-actions">
                    <button class="like-btn">üëç</button>
                    <button class="dislike-btn">üëé</button>
                    <button class="report-btn">üö®</button>
                </div>
            `;
            reviewList.appendChild(newReview);
            reviewForm.reset();
        });

        // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
        reviewList.addEventListener("click", function(event) {
            if (event.target.classList.contains("like-btn")) {
                alert("–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∞–π–∫!");
            } else if (event.target.classList.contains("dislike-btn")) {
                alert("–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–∏–∑–ª–∞–π–∫!");
            } else if (event.target.classList.contains("report-btn")) {
                alert("–í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.");
            }
        });
    }

    // --- –§–∞–∫—Ç—ã ---
    /*
    const factForm = document.querySelector(".fact-form");
    const factsList = document.querySelector(".facts-list");
    if (factForm && factsList) {
        factForm.addEventListener("submit", function(event) {
            event.preventDefault();
            const factText = document.getElementById("fact-text").value.trim();
            if (!factText) {
                alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ñ–∞–∫—Ç–∞!");
                return;
            }
            const newFact = document.createElement("div");
            newFact.classList.add("fact");
            newFact.innerHTML = `
                <p>${factText}</p>
                <button class="like-btn">üëç</button>
            `;
            factsList.appendChild(newFact);
            document.getElementById("fact-text").value = "";
        });

        factsList.addEventListener("click", function(event) {
            if (event.target.classList.contains("like-btn")) {
                alert("–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∞–π–∫!");
            }
        });
    }
    */

    // --- –ì–∞–ª–µ—Ä–µ—è ---
    /*
    const gallery = document.querySelector('.gallery');
    const modal = document.querySelector('.modal');
    const modalImg = document.querySelector('.modal-content');
    const closeBtn = document.querySelector('.close-btn');
    const closeModalBtn = document.querySelector('.close-modal');
    const uploadForm = document.querySelector('.upload-form');

    if (gallery) {
        gallery.addEventListener("click", function(event) {
            if (event.target.classList.contains("preview")) {
                if (modal && modalImg) {
                    modal.style.display = "flex";
                    modalImg.src = event.target.src;
                }
            } else if (event.target.classList.contains("like-btn")) {
                alert("–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∞–π–∫!");
            }
        });
    }

    if (closeBtn) {
        closeBtn.addEventListener("click", function() {
            modal.style.display = "none";
        });
    }
    if (closeModalBtn) {
        closeModalBtn.addEventListener("click", function() {
            modal.style.display = "none";
        });
    }
    if (modal) {
        modal.addEventListener("click", function(event) {
            if (!event.target.closest(".modal-content-wrapper")) {
                modal.style.display = "none";
            }
        });
    }
    if (uploadForm && gallery) {
    uploadForm.addEventListener("submit", function(event) {
        event.preventDefault();
        const fileInput = document.getElementById("upload-file");
        if (fileInput.files.length === 0) return;
        const file = fileInput.files[0];

        // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
        const allowedTypes = ["image/png", "image/jpeg", "image/jpg", "image/gif"];
        if (!allowedTypes.includes(file.type)) {
            alert("–û—à–∏–±–∫–∞: –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!");
            return;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
            const newArt = document.createElement("div");
            newArt.classList.add("art");
            newArt.innerHTML = `
                <img src="${e.target.result}" alt="–í–∞—à –∞—Ä—Ç" class="preview">
                <div class="art-actions">
                    <button class="like-btn">üëç</button>
                </div>
            `;
            gallery.appendChild(newArt);
        };
        reader.readAsDataURL(file);
        fileInput.value = "";
    });
}
    */

    // --- –¢–µ–æ—Ä–∏–∏ ---
    /*
    const theoryList = document.querySelector(".theory-list");
    const theoryForm = document.querySelector(".theory-form");
    if (theoryForm && theoryList) {
    theoryForm.addEventListener("submit", function(event) {
        event.preventDefault();
        const title = document.getElementById("title").value.trim();
        const content = document.getElementById("content").value.trim();
        const imageInput = document.getElementById("image");

        if (!title || !content) {
            alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
            return;
        }

        // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
        if (imageInput.files.length > 0) {
            const file = imageInput.files[0];
            const allowedTypes = ["image/png", "image/jpeg", "image/jpg", "image/gif"];

            if (!allowedTypes.includes(file.type)) {
                alert("–û—à–∏–±–∫–∞: –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!");
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                const newTheory = document.createElement("div");
                newTheory.classList.add("theory");
                newTheory.innerHTML = `<h3>${title}</h3>`;
                newTheory.innerHTML += `<img src="${e.target.result}" alt="${title}">`;
                newTheory.innerHTML += `<p>${content}</p>`;
                theoryList.appendChild(newTheory);
            };
            reader.readAsDataURL(file);
        } else {
            const newTheory = document.createElement("div");
            newTheory.classList.add("theory");
            newTheory.innerHTML = `<h3>${title}</h3>`;
            newTheory.innerHTML += `<p>${content}</p>`;
            theoryList.appendChild(newTheory);
        }

        theoryForm.reset();
    });
}
    */

    // --- –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ—Ñ–∏–ª—å ---
   if (window.location.pathname.includes("personal.html")) {
        const userData = JSON.parse(localStorage.getItem("user"));
        if (!userData) {
            const redirect = confirm("–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç! –ù–∞–∂–º–∏—Ç–µ '–û–ö' –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é.");
            if (redirect) window.location.href = "index.html";
            return;
        }
        const avatarUpload = document.getElementById("avatar-upload");
        const avatarImg = document.getElementById("avatar");
        const usernameInput = document.getElementById("username");
        const savedAvatar = localStorage.getItem("avatar");
        const savedName = localStorage.getItem("username");
        if (savedAvatar) avatarImg.src = savedAvatar;
        if (savedName) usernameInput.value = savedName;
        if (avatarUpload) {
            avatarUpload.addEventListener("change", function(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        avatarImg.src = e.target.result;
                        localStorage.setItem("avatar", e.target.result);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }
        if (usernameInput) {
            usernameInput.addEventListener("input", function() {
                localStorage.setItem("username", this.value);
            });
        }
    }
});
